{"version":3,"sources":["shared/Firebase.js","redux/modules/user.js","shared/Cookie.js","redux/modules/image.js","redux/modules/post.js","redux/modules/comment.js","redux/configureStore.js","elements/Grid.js","elements/Image.js","elements/Text.js","elements/Input.js","elements/Button.js","elements/Spinner.js","components/Post.js","shared/InfinityScroll.js","pages/PostList.js","shared/common.js","pages/Login.js","pages/Signup.js","shared/Upload.js","pages/PostWrite.js","components/CommentList.js","components/CommentWrite.js","shared/Permit.js","pages/PostDetail.js","shared/Search.js","components/Header.js","components/Card.js","pages/Notification.js","shared/App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","auth","firestore","storage","LOG_OUT","GET_USER","SET_USER","logOut","createAction","user","setUser","handleActions","state","action","produce","draft","name","value","exp","date","Date","setTime","getTime","document","cookie","toUTCString","setCookie","payload","is_login","console","log","deleteCookie","actionCreators","id","pwd","user_name","dispatch","getState","history","createUserWithEmailAndPassword","then","currentUser","updateProfile","displayName","user_profile","uid","push","catch","error","errorCode","code","errorMessage","message","setPersistence","Auth","Persistence","SESSION","res","signInWithEmailAndPassword","onAuthStateChanged","email","signOut","replace","UPLOADING","UPLOAD_IMAGE","SET_PREVIEW","uploading","uploadImage","image_url","setPreview","preview","uploadImageFB","image","ref","put","snapshot","getDownloadURL","url","SET_POST","ADD_POST","EDIT_POST","LOADING","setPost","post_list","paging","addPost","post","editPost","post_id","loading","is_loading","initialPost","contents","comment_cnt","insert_dt","moment","format","list","reduce","acc","cur","findIndex","a","unshift","idx","p","start","next","size","getPostFB","_paging","query","collection","orderBy","startAt","limit","get","docs","length","forEach","doc","_post","data","Object","keys","indexOf","user_info","pop","addPostFB","postDB","_user","user_id","_image","putString","add","imageActions","err","window","alert","editPostFB","_post_idx","update","getOnePostFB","SET_COMMENT","ADD_COMMENT","setComment","comment_list","addComment","comment","where","commentDB","find","l","increment","FieldValue","postActions","parseInt","createBrowserHistory","rootReducer","combineReducers","User","Post","Image","Comment","router","connectRouter","middlewares","thunk","withExtraArgument","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","Grid","props","is_flex","width","margin","padding","bg","children","center","_onClick","styles","Fragment","GridBox","onClick","defaultProps","styled","div","shape","src","ImageCircle","AspectOutter","AspectInner","ImageDefault","Text","bold","color","P","Input","label","placeholder","_onChange","type","multiLine","is_submit","onSubmit","ElTextarea","rows","onChange","ElInput","onKeyPress","e","key","textarea","input","Button","text","is_float","FloatButton","ElButton","button","Spinner","is_dim","SpinnerWrap","SpinnerSvg","is_me","InfinityScroll","callNext","is_next","_handleScroll","_","throttle","innerHeight","body","scrollHeight","documentElement","scrollTop","handleScroll","React","useCallback","useEffect","addEventListener","removeEventListener","PostList","useDispatch","useSelector","map","emailCheck","test","Login","useState","setId","setPwd","target","userActions","Signup","pwd_check","setPwdCheck","setUserName","Upload","is_uploading","fileInput","useRef","files","current","reader","FileReader","file","readAsDataURL","onloadend","result","disabled","PostWrite","match","params","is_edit","setContents","goBack","multiline","CommentList","commentActions","c","CommentItem","CommentWrite","comment_text","setCommentText","write","Permit","_session_key","sessionStorage","getItem","PostDetail","post_idx","Search","setText","debounce","keyPress","Header","is_session","Card","Notification","n","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.eb4c3a5f.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAY6yGELmDWlv5Yn-5xlAfHA_wJ25AW5w0\",\r\n    authDomain: \"image-community-9d52d.firebaseapp.com\",\r\n    projectId: \"image-community-9d52d\",\r\n    storageBucket: \"image-community-9d52d.appspot.com\",\r\n    messagingSenderId: \"759234527520\",\r\n    appId: \"1:759234527520:web:d271be62029540ea49d745\",\r\n    measurementId: \"G-VQGNGM4BS6\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst apiKey = firebaseConfig.apiKey;\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\nconst storage = firebase.storage();\r\n\r\nexport{auth, apiKey, firestore, storage};","import { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\n\r\nimport { setCookie, getCookie, deleteCookie } from \"../../shared/Cookie\";\r\n\r\nimport { auth } from \"../../shared/Firebase\";\r\nimport firebase from \"firebase/app\";\r\nimport { history } from \"./../configureStore\";\r\n\r\n// actions\r\nconst LOG_OUT = \"LOG_OUT\";\r\nconst GET_USER = \"GET_USER\";\r\nconst SET_USER = \"SET_USER\";\r\n\r\n// action creators\r\nconst logOut = createAction(LOG_OUT, (user) => ({ user }));\r\nconst getUser = createAction(GET_USER, (user) => ({ user }));\r\nconst setUser = createAction(SET_USER, (user) => ({ user }));\r\n\r\n// initialState\r\nconst initialState = {\r\n  user: null,\r\n  is_login: false,\r\n};\r\n\r\n// middleware actions\r\nconst loginFB = (id, pwd) => {\r\n  return function (dispatch, getState, { history }) {\r\n    auth.setPersistence(firebase.auth.Auth.Persistence.SESSION).then((res) => {\r\n      auth\r\n        .signInWithEmailAndPassword(id, pwd)\r\n        .then((user) => {\r\n          console.log(user);\r\n\r\n          dispatch(\r\n            setUser({\r\n              user_name: user.user.displayName,\r\n              id: id,\r\n              user_profile: \"\",\r\n              uid: user.user.uid,\r\n            })\r\n          );\r\n\r\n          history.push(\"/\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.code, error.message);\r\n        });\r\n    });\r\n  };\r\n};\r\n\r\nconst signupFB = (id, pwd, user_name) => {\r\n  return function (dispatch, getState, { history }) {\r\n    auth\r\n      .createUserWithEmailAndPassword(id, pwd)\r\n      .then((user) => {\r\n        console.log(user);\r\n\r\n        auth.currentUser\r\n          .updateProfile({\r\n            displayName: user_name,\r\n          })\r\n          .then(() => {\r\n            dispatch(\r\n              setUser({\r\n                user_name: user_name,\r\n                id: id,\r\n                user_profile: \"\",\r\n                uid: user.user.uid,\r\n              })\r\n            );\r\n            history.push(\"/\");\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n\r\n        // Signed in\r\n        // ...\r\n      })\r\n      .catch((error) => {\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n\r\n        console.log(errorCode, errorMessage);\r\n        // ..\r\n      });\r\n  };\r\n};\r\n\r\nconst loginCheckFB = () => {\r\n  return function (dispatch, getState, { history }) {\r\n    auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        dispatch(\r\n          setUser({\r\n            user_name: user.displayName,\r\n            user_profile: \"\",\r\n            id: user.email,\r\n            uid: user.uid,\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(logOut());\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nconst logoutFB = () => {\r\n  return function (dispatch, getState, { history }) {\r\n    auth.signOut().then(() => {\r\n      dispatch(logOut());\r\n      history.replace(\"/\");\r\n    });\r\n  };\r\n};\r\n\r\n\r\n// reducer\r\nexport default handleActions(\r\n  {\r\n    [SET_USER]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        setCookie(\"is_login\", \"success\");\r\n        draft.user = action.payload.user;\r\n        draft.is_login = true;\r\n      }),\r\n    [LOG_OUT]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        deleteCookie(\"is_login\");\r\n        draft.user = null;\r\n        draft.is_login = false;\r\n      }),\r\n    [GET_USER]: (state, action) => produce(state, (draft) => {}),\r\n  },\r\n  initialState\r\n);\r\n\r\n// action creator export\r\nconst actionCreators = {\r\n  logOut,\r\n  getUser,\r\n  signupFB,\r\n  loginFB,\r\n  loginCheckFB,\r\n  logoutFB,\r\n};\r\n\r\nexport { actionCreators };","const getCookie = (name) => {\r\n    let value = \"; \" + document.cookie;\r\n\r\n    let parts = value.split(`; ${name}=`);  // ; user_id=\r\n\r\n    if(parts.length === 2) {\r\n        return parts.pop().split(';').shift();\r\n    }\r\n}\r\n\r\nconst setCookie = (name, value, exp = 5) => {\r\n    let date = new Date();\r\n    date.setTime(date.getTime() + exp * 24 * 60 * 60 * 1000);\r\n    document.cookie = `${name}=${value}; expires=${date.toUTCString()}`;\r\n}\r\n\r\nconst deleteCookie = (name) => {\r\n    let date = new Date(\"2020=01=01\").toUTCString();\r\n\r\n    console.log(date);\r\n\r\n    document.cookie = name+\"=; expires=\"+date;\r\n}\r\n\r\nexport {getCookie, setCookie, deleteCookie};","import React from \"react\";\r\nimport produce from \"immer\";\r\nimport { storage } from \"../../shared/Firebase\";\r\nimport { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst UPLOADING = \"UPLOADING\";\r\nconst UPLOAD_IMAGE = \"UPLOAD_IMAGE\";\r\nconst SET_PREVIEW = \"SET_PREVIEW\";\r\n\r\nconst uploading = createAction(UPLOADING, (uploading) => ({ uploading }));\r\nconst uploadImage = createAction(UPLOAD_IMAGE, (image_url) => ({ image_url }));\r\nconst setPreview = createAction(SET_PREVIEW, (preview) => ({ preview }));\r\n\r\nconst initialState = {\r\n  image_url: \"http://via.placeholder.com/400x300\",\r\n  uploading: false,\r\n  preview: null,\r\n};\r\n\r\nconst uploadImageFB = (image) => {\r\n  return function (dispatch, getState, { history }) {\r\n    dispatch(uploading(true));\r\n    const _upload = storage.ref(`image/${image.name}`).put(image);\r\n\r\n    _upload.then((snapshot) => {\r\n      console.log(snapshot);\r\n\r\n      snapshot.ref.getDownloadURL().then((url) => {\r\n        dispatch(uploadImage(url));\r\n        console.log(url);\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [UPLOAD_IMAGE]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        draft.image_url = action.payload.image_url;\r\n        draft.uploading = false;\r\n      }),\r\n    [UPLOADING]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        draft.uploading = action.payload.uploading;\r\n      }),\r\n      [SET_PREVIEW]: (state, action) => \r\n      produce(state,(draft) => {\r\n        draft.preview = action.payload.preview;\r\n      }),\r\n  },\r\n  initialState\r\n);\r\n\r\nconst actionCreators = {\r\n  uploadImage,\r\n  uploadImageFB,\r\n  setPreview,\r\n};\r\n\r\nexport { actionCreators };\r\n","import { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\nimport { firestore, storage } from \"../../shared/Firebase\";\r\nimport \"moment\";\r\nimport moment from \"moment\";\r\n\r\nimport { actionCreators as imageActions } from \"./image\";\r\n\r\nconst SET_POST = \"SET_POST\";\r\nconst ADD_POST = \"ADD_POST\";\r\nconst EDIT_POST = \"EDIT_POST\";\r\nconst LOADING = \"LOADING\";\r\n\r\nconst setPost = createAction(SET_POST, (post_list, paging) => ({\r\n  post_list,\r\n  paging,\r\n}));\r\nconst addPost = createAction(ADD_POST, (post) => ({ post }));\r\nconst editPost = createAction(EDIT_POST, (post_id, post) => ({\r\n  post_id,\r\n  post,\r\n}));\r\n\r\nconst loading = createAction(LOADING, (is_loading) => ({ is_loading }));\r\n\r\nconst initialState = {\r\n  list: [],\r\n  paging: { start: null, next: null, size: 3 },\r\n  is_loading: false,\r\n};\r\n\r\nconst initialPost = {\r\n  // id: 0,\r\n  // user_info: {\r\n  //   user_name: \"mean0\",\r\n  //   user_profile: \"https://mean0images.s3.ap-northeast-2.amazonaws.com/4.jpeg\",\r\n  // },\r\n  image_url: \"https://mean0images.s3.ap-northeast-2.amazonaws.com/4.jpeg\",\r\n  contents: \"\",\r\n  comment_cnt: 0,\r\n  insert_dt: moment().format(\"YYYY-MM-DD hh:mm:ss\"),\r\n};\r\n\r\nconst editPostFB = (post_id = null, post = {}) => {\r\n  return function (dispatch, getState, { history }) {\r\n    if (!post_id) {\r\n      console.log(\"게시물 정보가 없어요!\");\r\n      return;\r\n    }\r\n\r\n    const _image = getState().image.preview;\r\n    const _post_idx = getState().post.list.findIndex((p) => p.id === post_id);\r\n    const _post = getState().post.list[_post_idx];\r\n\r\n    const postDB = firestore.collection(\"post\");\r\n\r\n    if (_image === _post.image_url) {\r\n      postDB\r\n        .doc(post_id)\r\n        .update(post)\r\n        .then((doc) => {\r\n          dispatch(editPost(post_id, { ...post }));\r\n          history.replace(\"/\");\r\n        });\r\n      return;\r\n    } else {\r\n      const user_id = getState().user.user.uid;\r\n      const _upload = storage\r\n        .ref(`images/${user_id}_${new Date().getTime()}`)\r\n        .putString(_image, \"data_url\");\r\n\r\n      _upload.then((snapshot) => {\r\n        snapshot.ref\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            console.log(url);\r\n\r\n            return url;\r\n          })\r\n          .then((url) => {\r\n            postDB\r\n              .doc(post_id)\r\n              .update({ ...post, image_url: url })\r\n              .then((doc) => {\r\n                dispatch(editPost(post_id, { ...post, image_url: url }));\r\n                history.replace(\"/\");\r\n              });\r\n          })\r\n          .catch((err) => {\r\n            window.alert(\"앗! 이미지 업로드에 문제가 있어요!\");\r\n            console.log(\"앗! 이미지 업로드에 문제가 있어요!\", err);\r\n          });\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nconst addPostFB = (contents = \"\") => {\r\n  return function (dispatch, getState, { history }) {\r\n    const postDB = firestore.collection(\"post\");\r\n\r\n    const _user = getState().user.user;\r\n\r\n    const user_info = {\r\n      user_name: _user.user_name,\r\n      user_id: _user.uid,\r\n      user_profile: _user.user_profile,\r\n    };\r\n\r\n    const _post = {\r\n      ...initialPost,\r\n      contents: contents,\r\n      insert_dt: moment().format(\"YYYY-MM-DD hh:mm:ss\"),\r\n    };\r\n\r\n    const _image = getState().image.preview;\r\n\r\n    console.log(_image);\r\n    console.log(typeof _image);\r\n\r\n    const _upload = storage\r\n      .ref(`images/${user_info.user_id}_${new Date().getTime()}`)\r\n      .putString(_image, \"data_url\");\r\n\r\n    _upload.then((snapshot) => {\r\n      snapshot.ref\r\n        .getDownloadURL()\r\n        .then((url) => {\r\n          console.log(url);\r\n\r\n          return url;\r\n        })\r\n        .then((url) => {\r\n          postDB\r\n            .add({ ...user_info, ..._post, image_url: url })\r\n            .then((doc) => {\r\n              let post = { user_info, ..._post, id: doc.id, image_url: url };\r\n              dispatch(addPost(post));\r\n              history.replace(\"/\");\r\n\r\n              dispatch(imageActions.setPreview(null));\r\n            })\r\n            .catch((err) => {\r\n              window.alert(\"앗! 포스트 작성에 문제가 있어요!\");\r\n              console.log(\"post 작성에 실패했어요!\", err);\r\n            });\r\n        })\r\n        .catch((err) => {\r\n          window.alert(\"앗! 이미지 업로드에 문제가 있어요!\");\r\n          console.log(\"앗! 이미지 업로드에 문제가 있어요!\", err);\r\n        });\r\n    });\r\n  };\r\n};\r\n\r\nconst getPostFB = (start = null, size = 3) => {\r\n  return function (dispatch, getState, { history }) {\r\n    let _paging = getState().post.paging;\r\n\r\n    if (_paging.start && !_paging.next) {\r\n      return;\r\n    }\r\n\r\n    dispatch(loading(true));\r\n    const postDB = firestore.collection(\"post\");\r\n\r\n    let query = postDB.orderBy(\"insert_dt\", \"desc\");\r\n\r\n    if (start) {\r\n      query = query.startAt(start);\r\n    }\r\n\r\n    query\r\n      .limit(size + 1)\r\n      .get()\r\n      .then((docs) => {\r\n        let post_list = [];\r\n\r\n        let paging = {\r\n          start: docs.docs[0],\r\n          next:\r\n            docs.docs.length === size + 1\r\n              ? docs.docs[docs.docs.length - 1]\r\n              : null,\r\n          size: size,\r\n        };\r\n\r\n        docs.forEach((doc) => {\r\n          let _post = doc.data();\r\n\r\n          // ['commenct_cnt', 'contents', ..]\r\n          let post = Object.keys(_post).reduce(\r\n            (acc, cur) => {\r\n              if (cur.indexOf(\"user_\") !== -1) {\r\n                return {\r\n                  ...acc,\r\n                  user_info: { ...acc.user_info, [cur]: _post[cur] },\r\n                };\r\n              }\r\n              return { ...acc, [cur]: _post[cur] };\r\n            },\r\n            { id: doc.id, user_info: {} }\r\n          );\r\n\r\n          post_list.push(post);\r\n        });\r\n\r\n        post_list.pop();\r\n\r\n        dispatch(setPost(post_list, paging));\r\n      });\r\n  };\r\n};\r\n\r\nconst getOnePostFB = (id) => {\r\n  return function (dispatch, getState, { history }) {\r\n    const postDB = firestore.collection(\"post\");\r\n    postDB\r\n      .doc(id)\r\n      .get()\r\n      .then((doc) => {\r\n        let _post = doc.data();\r\n\r\n        if (!_post) {\r\n          return;\r\n        }\r\n\r\n        let post = Object.keys(_post).reduce(\r\n          (acc, cur) => {\r\n            if (cur.indexOf(\"user_\") !== -1) {\r\n              return {\r\n                ...acc,\r\n                user_info: { ...acc.user_info, [cur]: _post[cur] },\r\n              };\r\n            }\r\n            return { ...acc, [cur]: _post[cur] };\r\n          },\r\n          { id: doc.id, user_info: {} }\r\n        );\r\n\r\n        dispatch(setPost([post], { start: null, next: null, size: 3 }));\r\n      });\r\n  };\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [SET_POST]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        draft.list.push(...action.payload.post_list);\r\n\r\n        // post_id가 같은 중복 항목을 제거합시다! :)\r\n        draft.list = draft.list.reduce((acc, cur) => {\r\n          // findIndex로 누산값(cur)에 현재값이 이미 들어있나 확인해요!\r\n          // 있으면? 덮어쓰고, 없으면? 넣어주기!\r\n          if (acc.findIndex((a) => a.id === cur.id) === -1) {\r\n            return [...acc, cur];\r\n          } else {\r\n            acc[acc.findIndex((a) => a.id === cur.id)] = cur;\r\n            return acc;\r\n          }\r\n        }, []);\r\n\r\n        // paging이 있을 때만 넣기\r\n        if (action.payload.paging) {\r\n          draft.paging = action.payload.paging;\r\n        }\r\n        draft.is_loading = false;\r\n      }),\r\n\r\n    [ADD_POST]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        draft.list.unshift(action.payload.post);\r\n      }),\r\n    [EDIT_POST]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        let idx = draft.list.findIndex((p) => p.id === action.payload.post_id);\r\n\r\n        draft.list[idx] = { ...draft.list[idx], ...action.payload.post };\r\n      }),\r\n    [LOADING]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        draft.is_loading = action.payload.is_loading;\r\n      }),\r\n  },\r\n  initialState\r\n);\r\n\r\nconst actionCreators = {\r\n  setPost,\r\n  addPost,\r\n  editPost,\r\n  getPostFB,\r\n  addPostFB,\r\n  editPostFB,\r\n  getOnePostFB,\r\n};\r\n\r\nexport { actionCreators };","import { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\nimport { firestore } from \"../../shared/Firebase\";\r\nimport \"moment\";\r\nimport moment from \"moment\";\r\n\r\nimport firebase from \"firebase/app\";\r\n\r\nimport { actionCreators as postActions } from \"./post\";\r\n\r\nconst SET_COMMENT = \"SET_COMMENT\";\r\nconst ADD_COMMENT = \"ADD_COMMENT\";\r\n\r\nconst LOADING = \"LOADING\";\r\n\r\nconst setComment = createAction(SET_COMMENT, (post_id, comment_list) => ({\r\n  post_id,\r\n  comment_list,\r\n}));\r\nconst addComment = createAction(ADD_COMMENT, (post_id, comment) => ({\r\n  post_id,\r\n  comment,\r\n}));\r\n\r\nconst loading = createAction(LOADING, (is_loading) => ({ is_loading }));\r\n\r\nconst initialState = {\r\n  list: {},\r\n  is_loading: false,\r\n};\r\n\r\nconst addCommentFB = (post_id, contents) => {\r\n  return function (dispatch, getState, { history }) {\r\n    const commentDB = firestore.collection(\"comment\");\r\n    const user_info = getState().user.user;\r\n\r\n    let comment = {\r\n      post_id: post_id,\r\n      user_id: user_info.uid,\r\n      user_name: user_info.user_name,\r\n      user_profile: user_info.user_profile,\r\n      contents: contents,\r\n      insert_dt: moment().format(\"YYYY-MM-DD hh:mm:ss\"),\r\n    };\r\n\r\n    commentDB.add(comment).then((doc) => {\r\n      const postDB = firestore.collection(\"post\");\r\n\r\n      const post = getState().post.list.find((l) => l.id === post_id);\r\n\r\n      const increment = firebase.firestore.FieldValue.increment(1);\r\n\r\n      comment = { ...comment, id: doc.id };\r\n      postDB\r\n        .doc(post_id)\r\n        .update({ comment_cnt: increment })\r\n        .then((_post) => {\r\n          dispatch(addComment(post_id, comment));\r\n\r\n          if (post) {\r\n            dispatch(\r\n              postActions.editPost(post_id, {\r\n                comment_cnt: parseInt(post.comment_cnt) + 1,\r\n              })\r\n            );\r\n          }\r\n        });\r\n    });\r\n  };\r\n};\r\n\r\nconst getCommentFB = (post_id = null) => {\r\n  return function (dispatch, getState, { history }) {\r\n    if (!post_id) {\r\n      return;\r\n    }\r\n\r\n    const commentDB = firestore.collection(\"comment\");\r\n\r\n    commentDB\r\n      .where(\"post_id\", \"==\", post_id)\r\n      .orderBy(\"insert_dt\", \"desc\")\r\n      .get()\r\n      .then((docs) => {\r\n        let list = [];\r\n        docs.forEach((doc) => {\r\n          list.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        //   가져온 데이터를 넣어주자!\r\n        dispatch(setComment(post_id, list));\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"댓글 가져오기 실패!\", post_id, err);\r\n      });\r\n  };\r\n};\r\nexport default handleActions(\r\n  {\r\n    [SET_COMMENT]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // comment는 딕셔너리 구조로 만들어서,\r\n        // post_id로 나눠 보관합시다! (각각 게시글 방을 만들어준다고 생각하면 구조 이해가 쉬워요.)\r\n        draft.list[action.payload.post_id] = action.payload.comment_list;\r\n      }),\r\n    [ADD_COMMENT]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        draft.list[action.payload.post_id].unshift(action.payload.comment);\r\n      }),\r\n    [LOADING]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        draft.is_loading = action.payload.is_loading;\r\n      }),\r\n  },\r\n  initialState\r\n);\r\n\r\nconst actionCreators = {\r\n  getCommentFB,\r\n  addCommentFB,\r\n  setComment,\r\n  addComment,\r\n};\r\n\r\nexport { actionCreators };\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { connectRouter } from \"connected-react-router\";\r\n\r\nimport User from \"./modules/user\";\r\nimport Post from \"./modules/post\";\r\nimport Image from \"./modules/image\";\r\nimport Comment from \"./modules/comment\";\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nconst rootReducer = combineReducers({\r\n  user: User,\r\n  post: Post,\r\n  image: Image,\r\n  comment: Comment,\r\n  router: connectRouter(history),\r\n});\r\n\r\nconst middlewares = [thunk.withExtraArgument({ history: history })];\r\n\r\n// 지금이 어느 환경인 지 알려줘요. (개발환경, 프로덕션(배포)환경 ...)\r\nconst env = process.env.NODE_ENV;\r\n\r\n// 개발환경에서는 로거라는 걸 하나만 더 써볼게요.\r\nif (env === \"development\") {\r\n  const { logger } = require(\"redux-logger\");\r\n  middlewares.push(logger);\r\n}\r\n\r\nconst composeEnhancers =\r\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n      })\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\r\n\r\nlet store = (initialStore) => createStore(rootReducer, enhancer);\r\n\r\nexport default store();\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Grid = (props) => {\r\n    const {is_flex, width, margin, padding, bg, children, center, _onClick} = props;\r\n    \r\n    const styles = {\r\n        is_flex: is_flex,\r\n        width: width,\r\n        padding: padding,\r\n        margin: margin,\r\n        bg: bg,\r\n        center: center,\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            <GridBox {...styles} onClick={_onClick}>{children}</GridBox>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nGrid.defaultProps = {\r\n    children: null,\r\n    is_flex: false,\r\n    width: \"100%\",\r\n    padding: false,\r\n    margin: false,\r\n    bg: false,\r\n    center: false,\r\n    _onClick: () =>{}\r\n}\r\n\r\nconst GridBox = styled.div`\r\n    width: ${(props) => props.width};\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    ${(props) => (props.padding? `padding : ${props.padding};` : \"\")}\r\n    ${(props) => (props.margin? `margin : ${props.margin};` : \"\")}\r\n    ${(props) => (props.bg? `background-color: ${props.bg};` : \"\")}\r\n    ${(props) => props.is_flex? \r\n    `display: flex; align-items: center; justify-content: space-between`\r\n    :\"\"}\r\n    ${(props) => props.center? `text-align: center;`: \"\"} \r\n`;\r\n\r\nexport default Grid;","import styled from 'styled-components';\nimport React from \"react\";\n\nconst Image = (props) => {\n    const {shape, src, size} = props;\n\n    const styles = {\n        src: src,\n        size: size,\n    }\n\n    if(shape === \"circle\"){\n        return (\n            <ImageCircle {...styles}></ImageCircle>\n        )\n    }\n\n    if(shape === \"rectangle\"){\n        return (\n            <AspectOutter>\n                <AspectInner {...styles}></AspectInner>\n            </AspectOutter>\n        )\n    }\n\n    return (\n        <React.Fragment>\n            <ImageDefault {...styles}></ImageDefault>\n        </React.Fragment>\n    )\n}\n\nImage.defaultProps = {\n  shape: \"circle\",\n  src: \"https://mean0images.s3.ap-northeast-2.amazonaws.com/4.jpeg\",\n  size: 36,\n};\n\nconst ImageDefault = styled.div`\n  --size: ${(props) => props.size}px;\n  width: var(--size);\n  height: var(--size);\n  background-image: url(\"${(props) => props.src}\");\n  background-size: cover;\n`;\n\nconst AspectOutter = styled.div`\n    width: 100%;\n    min-width: 250px;\n`;\n\nconst AspectInner = styled.div`\n    position: relative;\n    padding-top: 75%;\n    overflow: hidden;\n    background-image: url(\"${(props) => props.src}\");\n    background-size: cover;\n`;\n\nconst ImageCircle = styled.div`\n    --size: ${(props) => props.size}px;\n    width: var(--size);\n    height: var(--size);\n    border-radius: var(--size);\n\n    background-image: url(\"${(props) => props.src}\");\n    background-size: cover;\n    margin: 4px;\n`;\n\nexport default Image;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Text = (props) => {\r\n  const { bold, color, size, children, margin } = props;\r\n  const styles = {\r\n    bold: bold,\r\n    color: color,\r\n    size: size,\r\n    margin: margin,\r\n  };\r\n\r\n  return <P {...styles}>{children}</P>;\r\n};\r\n\r\nText.defaultProps = {\r\n  children: null,\r\n  bold: false,\r\n  color: \"#222831\",\r\n  size: \"14px\",\r\n  margin: false,\r\n};\r\n\r\nconst P = styled.p`\r\n  color: ${(props) => props.color};\r\n  font-size: ${(props) => props.size};\r\n  font-weight: ${(props) => (props.bold ? \"600\" : \"400\")};\r\n  ${(props) => (props.margin ? `margin : ${props.margin};` : \"\")};\r\n`;\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Text, Grid } from \"./index\";\r\n\r\nconst Input = (props) => {\r\n  const {\r\n    label,\r\n    placeholder,\r\n    _onChange,\r\n    type,\r\n    multiLine,\r\n    value,\r\n    is_submit,\r\n    onSubmit,\r\n  } = props;\r\n\r\n  if (multiLine) {\r\n    return (\r\n      <Grid>\r\n        {label && <Text margin=\"0px\">{label}</Text>}\r\n        <ElTextarea\r\n          rows={10}\r\n          value={value}\r\n          placeholder={placeholder}\r\n          onChange={_onChange}\r\n        ></ElTextarea>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid>\r\n        {label && <Text margin=\"0px\">{label}</Text>}\r\n        {is_submit ? (\r\n          <ElInput\r\n            type={type}\r\n            placeholder={placeholder}\r\n            onChange={_onChange}\r\n            value={value}\r\n            onKeyPress={(e) => {\r\n              if(e.key === \"Enter\"){\r\n                onSubmit(e);\r\n              }\r\n            }}\r\n          />\r\n        ) : (\r\n          <ElInput type={type} placeholder={placeholder} onChange={_onChange} />\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nInput.defaultProps = {\r\n  multiLine: false,\r\n  label: false,\r\n  placeholder: \"텍스트를 입력해주세요.\",\r\n  type: \"text\",\r\n  value: \"\",\r\n  is_submit: false,\r\n  onSubmit: () => {},\r\n  _onChange: () => {},\r\n};\r\n\r\nconst ElTextarea = styled.textarea`\r\n  border: 1px solid #212121;\r\n  width: 100%;\r\n  padding: 12px 4px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst ElInput = styled.input`\r\n  border: 1px solid #212121;\r\n  width: 100%;\r\n  padding: 12px 4px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport default Input;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = (props) => {\r\n  const { text, _onClick, is_float, children, margin, width } = props;\r\n\r\n  if (is_float) {\r\n    return (\r\n      <React.Fragment>\r\n        <FloatButton onClick={_onClick}>{text ? text : children}</FloatButton>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  const styles = {\r\n    margin: margin,\r\n    width: width,\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ElButton {...styles} onClick={_onClick}>{text ? text : children}</ElButton>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  text: false,\r\n  children: null,\r\n  _onClick: () => {},\r\n  is_float: false,\r\n  margin: false,\r\n  width: '100%',\r\n};\r\n\r\nconst ElButton = styled.button`\r\n  width: ${(props) => props.width};\r\n  background-color: #817f7f;\r\n  color: #ffffff;\r\n  padding: 12px 0px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  ${(props) => (props.margin ? `margin: ${props.margin};` : \"\")};\r\n`;\r\n\r\nconst FloatButton = styled.button`\r\n  width: 50px;\r\n  height: 50px;\r\n  background-color: #212121;\r\n  color: #ffffff;\r\n  box-sizing: border-box;\r\n  font-size: 36px;\r\n  font-weight: 500;\r\n  position: fixed;\r\n  bottom: 50px;\r\n  right: 16px;\r\n  text-align: center;\r\n  border: none;\r\n  border-radius: 50px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  vertical-align: middle;\r\n`;\r\nexport default Button;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Spinner = (props) => {\r\n  const { type, size, is_dim } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SpinnerWrap type={type} is_dim={is_dim}>\r\n        <SpinnerSvg size={size} />\r\n      </SpinnerWrap>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nSpinner.defaultProps = {\r\n  type: \"inline\", // inline, page\r\n  is_dim: false,\r\n  size: 60,\r\n};\r\n\r\nconst SpinnerWrap = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 20px 0;\r\n  ${(props) =>\r\n    props.type === \"page\"\r\n      ? `position: fixed;\r\n        height: 95vh;\r\n        top: 0;\r\n        left: 0;\r\n        padding: 0;\r\n        zIndex: 9999;`\r\n      : ``}\r\n  ${(props) =>\r\n    props.is_dim\r\n      ? `\r\n     background: rgba(0,0,0,0.4); \r\n     height: 100vh;\r\n  `\r\n      : ``}\r\n`;\r\n\r\nconst SpinnerSvg = styled.div`\r\n  --size: ${(props) => props.size}px;\r\n  width: var(--size);\r\n  height: var(--size);\r\n  background-image: url(\"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' style='margin: auto; background: none; display: block; shape-rendering: auto;' width='200px' height='200px' viewBox='0 0 100 100' preserveAspectRatio='xMidYMid'%3E%3Cg transform='rotate(0 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.9166666666666666s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(30 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.8333333333333334s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(60 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.75s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(90 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.6666666666666666s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(120 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.5833333333333334s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(150 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.5s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(180 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.4166666666666667s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(210 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.3333333333333333s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(240 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.25s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(270 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.16666666666666666s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(300 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.08333333333333333s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(330 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='0s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3C/svg%3E\");\r\n  background-size: var(--size);\r\n`;\r\n\r\nexport default Spinner;","import React from \"react\";\r\nimport { Grid, Image, Text, Button } from \"../elements\";\r\nimport { history } from \"../redux/configureStore\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Grid>\r\n        <Grid is_flex padding=\"16px\">\r\n          <Grid is_flex width=\"auto\">\r\n            <Image shape=\"circle\" src={props.src} />\r\n            <Text bold>{props.user_info.user_name}</Text>\r\n          </Grid>\r\n          <Grid is_flex width=\"auto\">\r\n            {props.is_me && (\r\n              <Button\r\n                width=\"auto\"\r\n                padding=\"4px\"\r\n                margin=\"4px\"\r\n                _onClick={() => {\r\n                  history.push(`/write/${props.id}`);\r\n                }}\r\n              >\r\n                수정\r\n              </Button>\r\n            )}\r\n            <Text>{props.insert_dt}</Text>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid padding=\"16px\">\r\n          <Text>{props.contents}</Text>\r\n        </Grid>\r\n        <Grid>\r\n          <Image shape=\"rectangle\" src={props.image_url} />\r\n        </Grid>\r\n        <Grid padding=\"16px\">\r\n          <Text margin=\"0px\" bold>\r\n            댓글 {props.comment_cnt}개\r\n          </Text>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nPost.defaultProps = {\r\n  user_info: {\r\n    user_name: \"mean0\",\r\n    user_profile: \"https://mean0images.s3.ap-northeast-2.amazonaws.com/4.jpeg\",\r\n  },\r\n  image_url: \"https://mean0images.s3.ap-northeast-2.amazonaws.com/4.jpeg\",\r\n  contents: \"고양이네요!\",\r\n  comment_cnt: 10,\r\n  insert_dt: \"2021-02-27 10:00:00\",\r\n  is_me: false,\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport Spinner from \"../elements/Spinner\";\r\n\r\nconst InfinityScroll = (props) => {\r\n  const { children, callNext, is_next, loading } = props;\r\n\r\n  const _handleScroll = _.throttle(() => {\r\n    if (loading) {\r\n      return;\r\n    }\r\n\r\n    const { innerHeight } = window;\r\n    const { scrollHeight } = document.body;\r\n\r\n    const scrollTop =\r\n      (document.documentElement && document.documentElement.scrollTop) ||\r\n      document.body.scrollTop;\r\n\r\n    if (scrollHeight - innerHeight - scrollTop < 200) {\r\n      callNext();\r\n    }\r\n  }, 300);\r\n\r\n  const handleScroll = React.useCallback(_handleScroll, [loading]);\r\n\r\n  React.useEffect(() => {\r\n    if (loading) {\r\n      return;\r\n    }\r\n    if (is_next) {\r\n      window.addEventListener(\"scroll\", handleScroll);\r\n    } else {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    }\r\n\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, [is_next, loading]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.children}\r\n      {is_next && (<Spinner></Spinner>)}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nInfinityScroll.defaultProps = {\r\n  children: null,\r\n  callNext: () => {},\r\n  is_next: false,\r\n  loading: false,\r\n};\r\nexport default InfinityScroll;\r\n","import React from \"react\";\r\n\r\nimport Post from \"../components/Post\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { actionCreators as postActions } from \"../redux/modules/post\";\r\nimport InfinityScroll from \"../shared/InfinityScroll\";\r\nimport { Grid, Text, Image } from \"../elements\";\r\n\r\nconst PostList = (props) => {\r\n  const dispatch = useDispatch();\r\n  const post_list = useSelector((state) => state.post.list);\r\n  const user_info = useSelector((state) => state.user.user);\r\n  const is_loading = useSelector((state) => state.post.is_loading);\r\n  const paging = useSelector((state) => state.post.paging);\r\n\r\n  const { history } = props;\r\n\r\n  React.useEffect(() => {\r\n    // 가지고 있는 데이터가 0개, 1개일 때만 새로 데이터를 호출해요.\r\n    if (post_list.length < 2) {\r\n      dispatch(postActions.getPostFB());\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid bg=\"#EFF6FF\" padding=\"20px 0px 20px 0px\">\r\n        <InfinityScroll\r\n          callNext={() => {\r\n            dispatch(postActions.getPostFB(paging.next));\r\n          }}\r\n          is_next={paging.next ? true : false}\r\n          loading={is_loading}\r\n        >\r\n          {post_list.map((p, idx) => {\r\n            if (p.user_info.user_id === user_info?.uid) {\r\n              return (\r\n                <Grid\r\n                  bg=\"#ffffff\"\r\n                  margin=\"0px 0px 20px 0px\"\r\n                  _onClick={() => {\r\n                    history.push(`/post/${p.id}`);\r\n                  }}\r\n                >\r\n                  <Post key={p.id} {...p} is_me />\r\n                </Grid>\r\n              );\r\n            } else {\r\n              return (\r\n                <Grid\r\n                  bg=\"#ffffff\"\r\n                  margin=\"0px 0px 20px 0px\"\r\n                  _onClick={() => {\r\n                    history.push(`/post/${p.id}`);\r\n                  }}\r\n                >\r\n                  <Post key={p.id} {...p} />\r\n                </Grid>\r\n              );\r\n            }\r\n          })}\r\n        </InfinityScroll>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n","export const emailCheck = (email) => {\r\n    let _reg = /^[0-9a-zA-Z]([-_.0-9a-zA-Z])*@[0-9a-zA-Z]([-_.0-9a-zA-Z])*.([a-zA-Z])*/;\r\n\r\n    return _reg.test(email);\r\n}","import React from \"react\";\r\nimport { Text, Input, Grid, Button } from \"../elements\";\r\nimport { getCookie, setCookie, deleteCookie } from \"../shared/Cookie\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCreators as userActions } from \"../redux/modules/user\";\r\nimport { emailCheck } from './../shared/common';\r\n\r\nconst Login = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [id, setId] = React.useState(\"\");\r\n  const [pwd, setPwd] = React.useState(\"\");\r\n\r\n  const login = () => {\r\n\r\n    console.log(id);\r\n\r\n    if(id === \"\" || pwd === \"\"){\r\n      window.alert(\"아이디 혹은 비밀번호가 공란입니다! 입력해주세요!\");\r\n      return;\r\n    }\r\n\r\n    if(!emailCheck(id)) {\r\n      window.alert(\"이메일 형식이 맞지 않습니다!\");\r\n      return;\r\n    }\r\n\r\n    dispatch(userActions.loginFB(id, pwd));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid padding=\"16px\">\r\n        <Text size=\"32px\" bold>\r\n          로그인\r\n        </Text>\r\n\r\n        <Grid padding=\"16px 0px\">\r\n          <Input\r\n            label=\"아이디\"\r\n            placeholder=\"아이디를 입력해주세요.\"\r\n            _onChange={(e) => {\r\n              setId(e.target.value);\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid padding=\"16px 0px\">\r\n          <Input\r\n            label=\"패스워드\"\r\n            placeholder=\"패스워드 입력해주세요.\"\r\n            type=\"password\"\r\n            _onChange={(e) => {\r\n              setPwd(e.target.value);\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Button\r\n          text=\"로그인하기\"\r\n          _onClick={() => {\r\n            console.log(\"로그인 했어!\");\r\n            login();\r\n          }}\r\n        ></Button>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;","import React from \"react\";\r\nimport { Grid, Text, Input, Button } from \"../elements\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCreators as userActions } from \"../redux/modules/user\";\r\nimport { emailCheck } from './../shared/common';\r\n\r\nconst Signup = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [id, setId] = React.useState(\"\");\r\n  const [pwd, setPwd] = React.useState(\"\");\r\n  const [pwd_check, setPwdCheck] = React.useState(\"\");\r\n  const [user_name, setUserName] = React.useState(\"\");\r\n\r\n  const signup = () => {\r\n    if (id === \"\" || pwd === \"\" || user_name === \"\") {\r\n      window.alert(\"아이디, 패스워드, 닉네임을 모두 입력해주세요!\");\r\n      return;\r\n    }\r\n\r\n    if(!emailCheck(id)) {\r\n      window.alert('이메일 형식이 맞지 않습니다!');\r\n      return;\r\n    }\r\n    \r\n    if (pwd !== pwd_check) {\r\n      window.alert('패스워드와 패스워드 확인이 일치하지 않습니다!');\r\n      return;\r\n    }\r\n\r\n    dispatch(userActions.signupFB(id, pwd, user_name));\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Grid padding=\"16px\">\r\n        <Text size=\"32px\" bold>\r\n          회원가입\r\n        </Text>\r\n\r\n        <Grid padding=\"16px 0px\">\r\n          <Input\r\n            label=\"아이디\"\r\n            placeholder=\"아이디를 입력해주세요.\"\r\n            _onChange={(e) => {\r\n              setId(e.target.value);\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid padding=\"16px 0px\">\r\n          <Input\r\n            label=\"닉네임\"\r\n            placeholder=\"닉네임을 입력해주세요.\"\r\n            _onChange={(e) => {\r\n              setUserName(e.target.value);\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid padding=\"16px 0px\">\r\n          <Input\r\n            label=\"비밀번호\"\r\n            placeholder=\"비밀번호를 입력해주세요.\"\r\n            _onChange={(e) => {\r\n              setPwd(e.target.value);\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid padding=\"16px 0px\">\r\n          <Input\r\n            label=\"비밀번호 확인\"\r\n            placeholder=\"비밀번호를 다시 입력해주세요.\"\r\n            _onChange={(e) => {\r\n              setPwdCheck(e.target.value);\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Button text=\"회원가입하기\" _onClick={signup}></Button>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nSignup.defaultProps = {};\r\n\r\nexport default Signup;","import React from \"react\";\r\nimport { Button } from \"../elements\";\r\nimport { storage } from \"./Firebase\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { actionCreators as imageActions } from \"../redux/modules/image\";\r\n\r\nconst Upload = (props) => {\r\n  const dispatch = useDispatch();\r\n  const is_uploading = useSelector((state) => state.image.uploading);\r\n  const fileInput = React.useRef();\r\n\r\n  const selectFile = (e) => {\r\n    console.log(e);\r\n    console.log(e.target);\r\n    console.log(e.target.files);\r\n\r\n    console.log(fileInput.current.files[0]);\r\n  \r\n    const reader = new FileReader();\r\n    const file = e.target.files[0];\r\n\r\n    reader.readAsDataURL(file);\r\n\r\n    reader.onloadend = () => {\r\n      console.log(reader.result);\r\n      dispatch(imageActions.setPreview(reader.result));\r\n    }\r\n  };\r\n\r\n  const uploadFB = () => {\r\n    if (!fileInput.current || fileInput.current.files.length === 0) {\r\n      window.alert(\"파일을 선택해주세요!\");\r\n      return;\r\n    }\r\n    \r\n    let image = fileInput.current.files[0];\r\n    dispatch(imageActions.uploadImageFB(image));\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <input type=\"file\" onChange={selectFile} ref={fileInput} disabled={is_uploading}/>\r\n      <Button _onClick={uploadFB}>업로드 하기</Button>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n","import React from \"react\";\r\nimport { Grid, Text, Button, Image, Input } from \"../elements\";\r\nimport Upload from \"../shared/Upload\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { actionCreators as postActions } from \"../redux/modules/post\";\r\nimport { actionCreators as imageActions } from \"../redux/modules/image\";\r\n\r\nconst PostWrite = (props) => {\r\n  const dispatch = useDispatch();\r\n  const is_login = useSelector((state) => state.user.is_login);\r\n  const preview = useSelector((state) => state.image.preview);\r\n  const post_list = useSelector((state) => state.post.list);\r\n\r\n  const post_id = props.match.params.id;\r\n  const is_edit = post_id ? true : false;\r\n\r\n  const { history } = props;\r\n\r\n  let _post = is_edit ? post_list.find((p) => p.id === post_id) : null;\r\n\r\n  const [contents, setContents] = React.useState(_post ? _post.contents : \"\");\r\n\r\n  React.useEffect(() => {\r\n    if (is_edit && !_post) {\r\n      history.goBack();\r\n\r\n      return;\r\n    }\r\n\r\n    if (is_edit) {\r\n      dispatch(imageActions.setPreview(_post.image_url));\r\n    }\r\n  }, []);\r\n\r\n  const changeContents = (e) => {\r\n    setContents(e.target.value);\r\n  };\r\n\r\n  const addPost = () => {\r\n    dispatch(postActions.addPostFB(contents));\r\n  };\r\n\r\n  const editPost = () => {\r\n    dispatch(postActions.editPostFB(post_id, { contents: contents }));\r\n  };\r\n\r\n  if (!is_login) {\r\n    return (\r\n      <Grid margin=\"100px 0px\" padding=\"16px\" center>\r\n        <Text size=\"32px\" bold>\r\n          앗! 잠깐!\r\n        </Text>\r\n        <Text size=\"16px\">로그인 후에만 글을 쓸 수 있어요!</Text>\r\n        <Button\r\n          _onClick={() => {\r\n            history.replace(\"/\");\r\n          }}\r\n        >\r\n          로그인 하러가기\r\n        </Button>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid padding=\"16px\">\r\n        <Text margin=\"0px\" size=\"36px\" bold>\r\n          {is_edit ? \"게시글 수정\" : \"게시글 작성\"}\r\n        </Text>\r\n        <Upload />\r\n      </Grid>\r\n\r\n      <Grid>\r\n        <Grid padding=\"16px\">\r\n          <Text margin=\"0px\" size=\"24px\" bold>\r\n            미리보기\r\n          </Text>\r\n        </Grid>\r\n\r\n        <Image\r\n          shape=\"rectangle\"\r\n          src={preview ? preview : \"http://via.placeholder.com/400x300\"}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid padding=\"16px\">\r\n        <Input\r\n          value={contents}\r\n          _onChange={changeContents}\r\n          label=\"게시글 내용\"\r\n          placeholder=\"게시글 작성\"\r\n          multiline\r\n        />\r\n      </Grid>\r\n\r\n      <Grid padding=\"16px\">\r\n        {is_edit ? (\r\n          <Button text=\"게시글 수정\" _onClick={editPost}></Button>\r\n        ) : (\r\n          <Button text=\"게시글 작성\" _onClick={addPost}></Button>\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PostWrite;\r\n","import React from \"react\";\r\nimport { Grid, Image, Text } from \"../elements\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCreators as commentActions } from \"../redux/modules/comment\";\r\n\r\nconst CommentList = (props) => {\r\n  const dispatch = useDispatch();\r\n  const comment_list = useSelector((state) => state.comment.list);\r\n\r\n  const { post_id } = props;\r\n\r\n  React.useEffect(() => {\r\n    if (!comment_list[post_id]) {\r\n      // 코멘트 정보가 없으면 불러오기\r\n      dispatch(commentActions.getCommentFB(post_id));\r\n    }\r\n  }, []);\r\n\r\n  // comment가 없거나, post_id가 없으면 아무것도 안넘겨준다!\r\n  if (!comment_list[post_id] || !post_id) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid padding=\"16px\">\r\n        {comment_list[post_id].map((c) => {\r\n          return <CommentItem key={c.id} {...c} />;\r\n        })}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nCommentList.defaultProps = {\r\n  post_id: null,\r\n};\r\n\r\nexport default CommentList;\r\n\r\nconst CommentItem = (props) => {\r\n  const { user_profile, user_name, user_id, post_id, contents, insert_dt } =\r\n    props;\r\n  return (\r\n    <Grid is_flex>\r\n      <Grid is_flex width=\"auto\">\r\n        <Image shape=\"circle\" />\r\n        <Text bold>{user_name}</Text>\r\n      </Grid>\r\n      <Grid is_flex margin=\"0px 4px\">\r\n        <Text margin=\"0px\">{contents}</Text>\r\n        <Text margin=\"0px\">{insert_dt}</Text>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nCommentItem.defaultProps = {\r\n  user_profile: \"\",\r\n  user_name: \"mean0\",\r\n  user_id: \"\",\r\n  post_id: 1,\r\n  contents: \"귀여운 고양이네요!\",\r\n  insert_dt: \"2021-01-01 19:00:00\",\r\n};\r\n","//components/CommentWrite.js\r\nimport React from \"react\";\r\n\r\nimport { Grid, Input, Button } from \"../elements\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCreators as commentActions } from \"../redux/modules/comment\";\r\n\r\nconst CommentWrite = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { post_id } = props;\r\n\r\n  const [comment_text, setCommentText] = React.useState(\"\");\r\n  \r\n  const onChange = (e) => {\r\n    setCommentText(e.target.value);\r\n  };\r\n\r\n  const write = () => {\r\n    if (comment_text === \"\") {\r\n      window.alert(\"댓글을 입력해주세요!\");\r\n      return;\r\n    }\r\n    // 입력된 텍스트는 지우기!\r\n    setCommentText(\"\");\r\n\r\n    // 파이어스토어에 추가합니다.\r\n    dispatch(commentActions.addCommentFB(post_id, comment_text));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid padding=\"16px\" is_flex>\r\n        <Input\r\n          placeholder=\"댓글 내용을 입력해주세요 :)\"\r\n          _onChange={onChange}\r\n          value={comment_text}\r\n          onSubmit={write}\r\n          is_submit\r\n        />\r\n        <Button width=\"50px\" margin=\"0px 2px 0px 2px\" _onClick={write}>\r\n          작성\r\n        </Button>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nCommentWrite.defaultProps = {\r\n  post_id: \"\",\r\n};\r\n\r\nexport default CommentWrite;\r\n","import React from \"react\";\r\nimport { useSelector } from 'react-redux';\r\nimport user from \"../redux/modules/user\";\r\nimport { apiKey } from './Firebase';\r\n\r\nconst Permit = (props) => {\r\n    const is_login = useSelector(state => state.user.user);\r\n    \r\n    const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\r\n    const is_session = sessionStorage.getItem(_session_key)? true: false;\r\n    \r\n    if(is_session && is_login) {\r\n        return (\r\n            <React.Fragment>\r\n                {props.children}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    return null;\r\n\r\n}\r\n\r\nexport default Permit;","import React from \"react\";\r\nimport Post from \"../components/Post\";\r\nimport CommentList from \"../components/CommentList\";\r\nimport CommentWrite from \"../components/CommentWrite\";\r\n\r\nimport Permit from \"../shared/Permit\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { actionCreators as postActions } from \"../redux/modules/post\";\r\n\r\nconst PostDetail = (props) => {\r\n  const dispatch = useDispatch();\r\n  const id = props.match.params.id;\r\n\r\n  const user_info = useSelector((state) => state.user.user);\r\n\r\n  const post_list = useSelector((store) => store.post.list);\r\n\r\n  const post_idx = post_list.findIndex((p) => p.id === id);\r\n  const post = post_list[post_idx];\r\n\r\n  React.useEffect(() => {\r\n    if (post) {\r\n      return;\r\n    }\r\n\r\n    dispatch(postActions.getOnePostFB(id));\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {post && (\r\n        <Post {...post} is_me={post.user_info.user_id === user_info?.uid} />\r\n      )}\r\n      <Permit>\r\n        <CommentWrite post_id={id} />\r\n      </Permit>\r\n      <CommentList post_id={id} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PostDetail;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nconst Search = (props) => {\r\n  const [text, setText] = React.useState(\"\");\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n    keyPress(e);\r\n  };\r\n\r\n  // 같은 이벤트 발생 시 이전 요청 취소 > 하나의 값만 나옴\r\n  const debounce = _.debounce((e) => {\r\n    console.log(\"debounce ::: \", e.target.value);\r\n  }, 1000);\r\n  \r\n  // 이벤트를 모아서 주기적 실행 > 누르는 동시에 여러 출력\r\n  const throttle = _.throttle((e) => {\r\n    console.log(\"throttle ::: \", e.target.value);\r\n  }, 1000);\r\n\r\n  const keyPress = React.useCallback(debounce, []);\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"text\" onChange={onChange} value={text} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nimport { Grid, Text, Button } from \"../elements\";\r\nimport { getCookie, deleteCookie } from \"../shared/Cookie\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { actionCreators as userActions } from \"../redux/modules/user\";\r\n\r\nimport { history } from \"./../redux/configureStore\";\r\nimport { apiKey } from \"../shared/Firebase\";\r\n\r\nconst Header = (props) => {\r\n  const dispatch = useDispatch();\r\n  const is_login = useSelector(state => state.user.user);\r\n    \r\n  const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\r\n  const is_session = sessionStorage.getItem(_session_key)? true: false;\r\n  \r\n  if (is_login && is_session) {\r\n    return (\r\n      <React.Fragment>\r\n        <Grid is_flex padding=\"4px 16px\">\r\n          <Grid>\r\n            <Text margin=\"0px\" size=\"24px\" bold>\r\n              헬로\r\n            </Text>\r\n          </Grid>\r\n\r\n          <Grid is_flex>\r\n            <Button text=\"내정보\"></Button>\r\n            <Button text=\"알림\"\r\n            _onClick={() => {\r\n              history.push(\"/noti\");\r\n            }}></Button>\r\n            <Button\r\n              text=\"로그아웃\"\r\n              _onClick={() => {\r\n                dispatch(userActions.logoutFB({}));\r\n              }}\r\n            ></Button>\r\n          </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  } \r\n  else {\r\n    return (\r\n      <React.Fragment>\r\n        <Grid is_flex padding=\"4px 16px\">\r\n          <Grid>\r\n            <Text margin=\"0px\" size=\"24px\" bold>\r\n              헬로\r\n            </Text>\r\n          </Grid>\r\n\r\n          <Grid is_flex>\r\n            <Button\r\n              text=\"로그인\"\r\n              _onClick={() => {\r\n                history.push(\"/login\");\r\n              }}\r\n            ></Button>\r\n            <Button\r\n              text=\"회원가입\"\r\n              _onClick={() => {\r\n                history.push(\"/signup\");\r\n              }}\r\n            ></Button>\r\n          </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nHeader.defaultProps = {};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Grid, Text, Image } from \"../elements\";\r\n\r\nconst Card = (props) => {\r\n  const { image_url, user_name, post_id } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid padding=\"16px\" is_flex bg=\"#ffffff\" margin=\"8px 0px\">\r\n        <Grid width=\"auto\" margin=\"0px 8px 0px 0px\">\r\n          <Image size={85} shape=\"square\" />\r\n        </Grid>\r\n        <Grid>\r\n          <Text>\r\n            <b>{user_name}</b>님이 게시글에 댓글을 남겼습니다.\r\n          </Text>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nCard.defaultProps = {\r\n    image_url: \"\",\r\n    user_name: \"\",\r\n    post_id: null,\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { Grid, Text, Image } from \"../elements\";\r\nimport Card from \"../components/Card\";\r\n\r\nconst Notification = (props) => {\r\n  let noti = [\r\n    { user_name: \"aaaaaa\", post_id: \"post1\", image_url: \"\" },\r\n    { user_name: \"aaaaaa\", post_id: \"post1\", image_url: \"\" },\r\n    { user_name: \"aaaaaa\", post_id: \"post1\", image_url: \"\" },\r\n    { user_name: \"aaaaaa\", post_id: \"post1\", image_url: \"\" },\r\n    { user_name: \"aaaaaa\", post_id: \"post1\", image_url: \"\" },\r\n    { user_name: \"aaaaaa\", post_id: \"post1\", image_url: \"\" },\r\n    { user_name: \"aaaaaa\", post_id: \"post1\", image_url: \"\" },\r\n  ];\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid padding=\"16px\" bg=\"#EFF6FF\">\r\n        {noti.map((n) => {\r\n          return <Card key={n.post_id} {...n} />;\r\n        })}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\n\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport { ConnectedRouter } from \"connected-react-router\";\r\nimport { history } from \"../redux/configureStore\";\r\n\r\nimport PostList from \"../pages/PostList\";\r\nimport Login from \"../pages/Login\";\r\nimport Signup from \"../pages/Signup\";\r\nimport PostWrite from \"../pages/PostWrite\";\r\nimport PostDetail from \"../pages/PostDetail\";\r\nimport Search from \"./Search\";\r\n\r\nimport Header from \"../components/Header\";\r\nimport { Grid, Button } from \"../elements\";\r\nimport Permit from \"./Permit\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCreators as userActions } from \"../redux/modules/user\";\r\n\r\nimport { apiKey } from \"./Firebase\";\r\nimport Notification from \"../pages/Notification\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\r\n  const is_session = sessionStorage.getItem(_session_key) ? true : false;\r\n\r\n  React.useEffect(() => {\r\n    if (is_session) {\r\n      dispatch(userActions.loginCheckFB());\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid>\r\n        <Header></Header>\r\n        <ConnectedRouter history={history}>\r\n          <Route path=\"/\" exact component={PostList} />\r\n          <Route path=\"/login\" exact component={Login} />\r\n          <Route path=\"/signup\" exact component={Signup} />\r\n          <Route path=\"/write\" exact component={PostWrite} />\r\n          <Route path=\"/write/:id\" exact component={PostWrite} />\r\n          <Route path=\"/post/:id\" exact component={PostDetail} />\r\n          <Route path=\"/search\" exact component={Search} />\r\n          <Route path=\"/noti\" exact component={Notification} />\r\n        </ConnectedRouter>\r\n      </Grid>\r\n      <Permit>\r\n        <Button\r\n          is_float\r\n          text=\"+\"\r\n          _onClick={() => {\r\n            history.push(\"/write\");\r\n          }}\r\n        ></Button>\r\n      </Permit>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './shared/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\n\r\nimport store from \"./redux/configureStore\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App/>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}